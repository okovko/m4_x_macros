divert(`-1')dnl
changecom(`<DISABLE>',`<COMMENTS>')`'dnl
include(`join.m4')dnl
ifdef(`input_file', `'dnl
`'define(`header', `wrap(include(`input_file'))'),
`'define(`header', `wrap(include(`example.h'))')dnl
)dnl
define(`header', `wrap(include(`example.h'))')dnl
define(`tokenized',
patsubst(
header,
`\(struct\s+\([a-zA-Z_][a-zA-Z0-9_]*\)\s+{\)\|\(,\|;\|{\|}\|=\)',
``'ifelse(`\1', `',
``'ifelse(
`\3', `,', ` CM ',
`\3', `;', ` SC ',
`\3', `=', ` EQ ',
`\3', `{', ` LB ',
`\3', `}', ` RB ')`'',
`struct_decl(\2) LB ')`'')dnl
)dnl
define(`struct_decl', ``)struct_decl($1'dnl
`'pushdef(`LB', ``SP'dnl
`'`'popdef(`LB')dnl
`'`'pushdef(`SC', ``SP'')dnl
`'`'pushdef(`EQ', ``CM'')dnl
`'`'pushdef(`LB', ``LB'dnl
`'`'`'pushdef(`SC', ``SC'')dnl
`'`'`'pushdef(`EQ', ``EQ'')dnl
`'`'`'pushdef(`RB', ``RB'dnl
`'`'`'`'popdef(`RB', `SC', `EQ')dnl
`'`'`'')dnl
`'`'')dnl
`'`'pushdef(`RB', ``)remove('dnl
`'`'`'popdef(`RB', `SC', `EQ', `LB')dnl
`'`'')dnl
`'')dnl
')dnl
define(`retokenized', tokenized)dnl
undefine(`struct_decl')dnl
define(`wrap', `')dnl
define(`remove', `
')dnl
define(`filtered', retokenized)dnl
undefine(`wrap', `remove')dnl
define(`detokenized',
patsubst(filtered,
` LB \| RB \| SC \| SP \| EQ ',
``'ifelse(
`\&', ` LB ', `{',
`\&', ` RB ', `}',
`\&', ` SC ', `;',
`\&', ` EQ ', `=',
`\&', ` SP ', `,')`'')dnl
)dnl
define(`struct_decl', `m4_struct($1,
`'_struct_decl(shift($*)))
')dnl
define(`_struct_decl', ``'dnl
`'ifelse(`$#$1', `1', `', `$#$2', `2', `  X($1)', ``'dnl
`'`'  X($1),
`'`'_struct_decl(shift($*))dnl
`'')dnl
')dnl
define(`m4_structs',
patsubst(patsubst(
detokenized,
` CM ', `,'),
`X(\(.*\>\)\s*\([a-zA-Z_][a-zA-Z0-9_]*\)\(\(\s*\[.*\]\)*\)\s*',
`X(\1`'translit(`\3', `[] A-Za-z0-9_', `*'), \2')dnl
)dnl
undefine(`struct_decl', `_struct_decl')dnl
define(`X', `$1 $2;')dnl
define(`m4_struct', `_Static_assert(sizeof($1) == sizeof(
struct {
join(`
', shift($*))
}), "invalid xmacro for $1 generated by x_macros.m4");')dnl
define(`X_asserts', m4_structs)dnl
undefine(`X', `m4_struct')dnl
define(`X', `$1 $2;')dnl
define(`m4_struct', `#define X_$1
join(`
', shift($*))dnl
')dnl
define(`X_macros',
patsubst(
m4_structs,
`\(^.+$\)
\(^\s*$\)
\|\(^.*$\)', `ifelse(`\3', `', `\1

\2', `\3 \\')')dnl
)dnl
undefine(`X', `m4_struct')dnl
divert`'dnl
X_macros`'dnl
X_asserts`'dnl
